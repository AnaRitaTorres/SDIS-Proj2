DROP DATABASE IF EXISTS sdis2;
CREATE DATABASE IF NOT EXISTS sdis2;
USE sdis2;
SELECT 'CREATING DATABASE STRUCTURE' as 'INFO';

DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS groups;
DROP TABLE IF EXISTS user_group;
DROP TABLE IF EXISTS list;
DROP TABLE IF EXISTS task;
DROP TABLE IF EXISTS message;

CREATE TABLE user(
	user_id		INT				NOT NULL AUTO_INCREMENT,
	name		VARCHAR(40)		NOT NULL,
	username	VARCHAR(20)		NOT NULL,
	password	VARCHAR(30)		NOT NULL,
	PRIMARY KEY (user_id)
);

CREATE TABLE groups(
	group_id	INT				NOT NULL AUTO_INCREMENT,
	name		VARCHAR(40)		NOT NULL,
	PRIMARY KEY (group_id)
);

CREATE TABLE user_group(
	user_id		INT 			NOT NULL AUTO_INCREMENT,
	group_id	INT				NOT NULL,
	FOREIGN KEY (user_id)  	REFERENCES user (user_id)	ON DELETE CASCADE,
	FOREIGN KEY (group_id)	REFERENCES groups (group_id)	ON DELETE CASCADE
);

CREATE TABLE list(
	list_id		INT				NOT NULL AUTO_INCREMENT,
	name		VARCHAR(30)		NOT NULL,
	group_id	INT				NOT NULL,
	PRIMARY KEY (list_id),
	FOREIGN KEY (group_id)  	REFERENCES groups (group_id)	ON DELETE CASCADE
);

CREATE TABLE task(
	task_id		INT				NOT NULL AUTO_INCREMENT,
	name		VARCHAR(60)		NOT NULL,
	list_id		INT				NOT NULL,
	done		ENUM('false', 'true') NOT NULL,
	PRIMARY KEY (task_id),
	FOREIGN KEY (list_id)  	REFERENCES list (list_id)	ON DELETE CASCADE
);

CREATE TABLE message(
	message_id 	INT 			NOT NULL AUTO_INCREMENT,
	content		VARCHAR(140)	NOT NULL,
	user_id		INT				NOT NULL,
	group_id	INT				NOT NULL,
	PRIMARY KEY (message_id),
	FOREIGN KEY (user_id)	REFERENCES user (user_id)	ON DELETE CASCADE,
	FOREIGN KEY (group_id)	REFERENCES groups (group_id)	ON DELETE CASCADE
);